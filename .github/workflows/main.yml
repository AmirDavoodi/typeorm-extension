# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

permissions:
    packages: write
    contents: write
    issues: write
    pull-requests: write

jobs:
    build:

        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x, 18.x]

        steps:
            - uses: actions/checkout@v3
              with:
                  persist-credentials: false

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install dependencies
              run: |
                  npm ci

            - name: Build package
              run: |
                  npm run build

            - name: Test package
              run: |
                  npm run test

            - name: Import bot's GPG key for signing commits
              id: import-gpg
              uses: crazy-max/ghaction-import-gpg@v4
              with:
                 gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
                 passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
                 git_config_global: true
                 git_user_signingkey: true
                 git_commit_gpgsign: true

            - name: Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
                  GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
                  GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
                  GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
              run: npx semantic-release
